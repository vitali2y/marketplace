//-
//- Marketplace Layout
//-

doctype html
html(lang='en')

  //- global configuration
  include cfg.jade
  each cfgParam in cfg
    - appDescription = cfgParam.description
    - appVersion = cfgParam.version
    - appUri = cfgParam.uri

  head
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1.0')
    title #{appDescription} - v.#{appVersion}
    meta(name='description', content="#{appDescription} - v.#{appVersion}")
    meta(name='keywords', content='marketplace, platform, p2p, libp2p, decentralized')
    meta(property="uri", content="#{appUri}")
    link(href='https://fonts.googleapis.com/css?family=Roboto+Slab', rel='stylesheet')

    link(rel='stylesheet', href='https://cdnjs.cloudflare.com/ajax/libs/spectre.css/0.5.1/spectre.min.css')
    link(rel='stylesheet', href='https://cdnjs.cloudflare.com/ajax/libs/vis/4.21.0/vis-network.min.css')
    link(rel='stylesheet', href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css')

    script(type='text/javascript', src='https://cdnjs.cloudflare.com/ajax/libs/vis/4.21.0/vis.min.js')

    //- link(rel='stylesheet', href='/css/vendor.css')
    link(rel='stylesheet', href='/css/app.css')

    script(type='text/javascript', src='/js/vendor.js')
    script(type='text/javascript', src='/js/peer-browser-bundle.js')
    script(type='text/javascript', src='/js/app.js')

  body
    .container

      //- modal popups
      //- 'My Info' popup
      #modal-user.modal(v-bind:class="{ active: isActive }")
        .modal-container(role='document')

          .modal-header
            a.btn.btn-clear.float-right(href='#', v-on:click='close()', aria-label='Close')
            .modal-title.h5
              b My Info

          .modal-body
            .content
              form
                .form-group
                  .columns
                    .column.col-6
                      label.form-label(for='modal-user-name') My Name
                      input#modal-user-name.form-input(type='text', v-model='name', disabled)
                    .column.col-6
                      label.form-label(for='modal-user-email') My Email
                      input#modal-user-email.form-input(type='text', v-model='email', disabled)

                .form-group
                  label.form-label(for='modal-user-address') My Address
                  input#modal-user-address.form-input(type='text', v-model='address', disabled)
                .form-group
                  .columns
                    .column.col-6
                      label.form-label(for='modal-user-mode') My Status
                      input#modal-user-mode.form-input(type='text', v-model='mode', disabled)
                    .column.col-6
                      label.form-label(for='modal-user-balance') My Balance
                      input#modal-user-balance.form-input(type='text', v-model='balance', disabled)

          .modal-footer
            a.btn.btn-primary(href='#', v-on:click='close()', aria-label='Close') Close


      //- 'Purchase Item' popup
      #modal-buy.modal(v-bind:class="{ active: isActive }")
        .modal-container(role='document')

          .modal-header
            a.btn.btn-clear.float-right(href='#', v-on:click='close()', aria-label='Close')
            .modal-title.h5
              b Purchase Item

          .modal-body
            .content
              form

                .form-group
                  .columns
                    .column.col-10
                      label.form-label(for='modal-buy-name') File Name
                      input#modal-buy-name.form-input(v-model='name', type='text', disabled)
                    .column.col-2
                      label.form-label(for='modal-buy-balance') Price
                      .has-icon-right
                        input#modal-buy-balance.form-input(v-model='price', type='text', disabled)

                .form-group
                  label.form-label(for='modal-buy-seller-name') Seller
                  .has-icon-right
                    input#modal-buy-seller-name.form-input(v-model='sellerName', type='text', disabled)

                .form-group
                  label.form-label(for='modal-buy-seller-address') Seller Address
                  .has-icon-right
                    input#modal-buy-seller-address.form-input(v-model='sellerAddress', type='text', disabled)

                .form-group
                  label.form-switch
                    input(type='checkbox', value='email', v-model='checked')
                    i.form-icon
                    | To send file to my email address

          .modal-footer
            a.btn.btn-error(href='#', v-on:click='buy()', aria-label='Purchase') Purchase
            a.btn.btn-primary(href='#', v-on:click='close()', aria-label='Cancel') Cancel


      //- TBD popup
      #modal-tbd.modal(v-bind:class="{ active: isActive }")
        .modal-container(role='document')

          .modal-header
            a.btn.btn-clear.float-right(href='#', v-on:click='close()', aria-label='Close')
            .modal-title.h5
              b {{ msg }}

          .modal-body
            .content
              | TBD

          .modal-footer
            a.btn.btn-primary(href='#', v-on:click='close()', aria-label='Close') Close


      //- 'Network Map' popup
      #modal-map.modal(v-bind:class="{ active: isActive }")
        .modal-container(role='document')

          .modal-header
            a.btn.btn-clear.float-right(href='#', v-on:click='close()', aria-label='Close')
            .modal-title.h5
              b Network Map

          .modal-body
            .content
              #network-map
                .vis-network(tabindex='900', style='position: relative; overflow: hidden; touch-action: pan-y; user-select: none; -webkit-user-drag: none; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); width: 100%; height: 100%;')
                  canvas(style='position: relative; touch-action: none; user-select: none; -webkit-user-drag: none; -webkit-tap-highlight-color: rgba(0, 0, 0, 0); width: 100%; height: 100%;')
              #network-map-legend(style="display: inline-flex")
                | Legend:&nbsp;&nbsp;
                div(style='color: red') &#x25C6;
                | &nbsp;buyer&nbsp;|&nbsp;
                div(style='color: orange') &#x25C6;
                | &nbsp;seller&nbsp;|&nbsp;
                div(style='color: limegreen') &#x25C6;
                | &nbsp;witness

          .modal-footer
            a.btn.btn-primary(href='#', v-on:click='close()', aria-label='Close') Close


      //- "Login As" popup
      #modal-loginas.modal(v-bind:class="{ active: isActive }")
        .modal-container(role='document')

          .modal-header
            a.btn.btn-clear.float-right(href='#', v-on:click='close()', aria-label='Close')
            .modal-title.h5
              b Login As

          .modal-body
            .content
              .input-group
                span.input-group-addon Select user:
                select#loginas.form-select.select-lg
                  option(id="QmdFdWtiC9HdNWvRH3Cih9hJhLvRZmsDutz549s25CtQ61") Alice (buyer)
                  option(id="QmWNi2wgUGDm7weopRAe7WKvr38M5EA6HBjsUA8UNTQk3h") Bob (seller)
                  option(id="Qmcc6oWA9Mz4e1u7Bgg4j7E9KYmG5UrckwCH1oDh6CTfyg") Tom (seller)
                  option(id="QmYLhqmsZYUTcVPWhoJK1UFDK2E9wWPJ6S5x1dTf3PRbSL") James (seller)
                  option(id="QmNrw7pSJNvW1VDUHePb2M6oPWB6zMW2yRfJXDZyrphyVZ") CL-1 (witness)

          .modal-footer
            a.btn.btn-error(href='#', v-on:click='loginAs()', aria-label='Login') Login
            a.btn.btn-primary(href='#', v-on:click='close()', aria-label='Close') Close


      //- "Transaction #" popup
      #modal-txview.modal(v-bind:class="{ active: isActive }")
        .modal-container(role='document')

          .modal-header
            a.btn.btn-clear.float-right(href='#', v-on:click='close()', aria-label='Close')
            .modal-title.h5
              b Transaction # {{ txId }}

          .modal-body
            .content
              textarea(readonly, rows='13', cols='80', style='background-color: rgb(242, 242, 255); resize: none;') {{ txContent }}

          .modal-footer
            a.btn.btn-primary(href='#', v-on:click='close()', aria-label='Close') Close


      //- top navigation bar
      #navbar.columns
        .column
          header.navbar
            .navbar-section
              a(v-on:click="app('home')" style='margin: 20px')
                icon(name='bank', scale='3', label='My Marketplace')
            .navbar-section
              .popover.popover-bottom
                button.btn.btn-link
                  icon(name='compass', scale='2.7', label='Menu')
                .popover-container(style="width: 370px;")
                  ul.menu
                    li.menu-item
                      a(v-on:click="modal('user')")
                        icon(name='info-circle', scale='1.3', label="My Info")
                        | &nbsp;&nbsp;My Info 

                    li.menu-item
                      a(v-on:click="app('tx')")
                        icon(name='cubes', scale='1.3', label="My Transactions")
                        | &nbsp;&nbsp;My Transactions

                    li.menu-item
                      a(v-on:click="app('explorer')")
                        icon(name='link', scale='1.3', label="Blockchain Explorer")
                        | &nbsp;&nbsp;Blockchain Explorer
                    
                    li.menu-item
                      a(v-on:click="modal('map')")
                        icon(name='sitemap', scale='1.3', label="Network Map")
                        | &nbsp;&nbsp;Network Map
                    
                    li.menu-item
                      a(v-on:click="app('search')")
                        icon(name='search', scale='1.3', label="Search")
                        | &nbsp;&nbsp;Search
                    
                    li.menu-item
                      a(v-on:click="modal('loginas')")
                        icon(name='plug', scale='1.3', label="Login As")
                        | &nbsp;&nbsp;Login As


      //- main area
      .columns
        //- left column (dynamic list of stores)
        #app-stores.column.col-3
          dl
            dd(v-for='(item, index) in stores', :id="item.id")
              a(:href="'?store_id=' + item.id", @click.prevent='storeSelected(item.id)')
                icon(name='bank', :label="item.name")
                b
                  | &nbsp;{{ item.name }}&nbsp;
                sup(v-if='item.stars > 0')
                  icon(name='star', :label="item.name")
                  | {{ item.stars }}


        //- right column
        //- home app
        #app-home.app.column.col-9(v-bind:class="{ inactive: !isActive }")
          br
          br
          h2 Decentralized Marketplace (PoC)
          ul
            li
              | List of registered online stores is on the left side - select any online store in order to select and buy digital goods,
            li
              b
                a(v-on:click="modal('user')") My Info
              | &nbsp;popup provides general information about currently logged in user (buyer or seller), such as amount of available coins, public address, etc,
            li
              b
                a(v-on:click="app('tx')") My Transactions
              | &nbsp;view contains list of already successfully executed transactions under personal private ledger,
            li
              b
                a(v-on:click="app('explorer')") Blockchain Explorer
              | &nbsp;view provides all information from public blockchain,
            li
              b
                a(v-on:click="modal('map')") Network Map
              | &nbsp;popup renders topology of the whole network, and some details about nodes and connections between them,
            li
              b
                a(v-on:click="app('search')") Search
              | &nbsp;view might be used for searching the product by full or partial file name, file category, #hashtag, etc among all online nodes (TBD),
            li
              b
                a(v-on:click="modal('loginas')") Login As
              | &nbsp;popup provides test possibility to login under different users and to execute required activities, make views, etc.


        //- "My Transactions" app
        #app-tx.app.column.col-9(v-bind:class="{ inactive: !isActive }")
          h5
            b My Transactions

          table.table.table-striped.table-hover
            thead
              tr
                th Id
                th Created
                th Content
                th View
            tbody
              tr(v-for='(item, index) in txs', :id="item.id")
                td(:title="item.id")
                  .overme(style="width: 250px")
                    | {{ item.id }}
                td(style="width: 150px")
                  | {{ item.ts }}
                td.overme(:title="item.all")
                  .overme(style="width: 500px")
                    | {{ item.all }}
                td
                  button.btn.btn-link(@click.prevent="txView(item.id)")
                    icon(name='eye', scale='2', label='View')


        //- "Blockchain Explorer" app
        #app-explorer.app.column.col-9(v-bind:class="{ inactive: !isActive }")
          h5
            b Blockchain Explorer

          table.table.table-striped.table-hover
            thead
              tr
                th Id
                th Created
                th Content
                th View
            tbody
              tr(v-for='(item, index) in txs', :id="item.id")
                td(:title="item.id")
                  .overme(style="width: 250px")
                    | {{ item.id }}
                td(style="width: 150px")
                  | {{ item.ts }}
                td.overme(:title="item.all")
                  .overme(style="width: 500px")
                    | {{ item.all }}
                td
                  button.btn.btn-link(@click.prevent="txView(item.id)")
                    icon(name='eye', scale='2', label='View')


        //- "Search" app
        #app-search.app.column.col-9(v-bind:class="{ inactive: !isActive }")
          br
          br
          .market-title.gradient-shadow(title='Marketplace Search')
            div Marketplace Search

          .input-group(style="padding-top: 10px")
            span.input-group-addon Search for:
            input.form-input(style='width: unset', type='text', placeholder='type full or partial file name or #hashtag')
            button.btn.btn-primary.input-group-btn(@click="$bus.$emit('open-modal-tbd', 'Search')") &nbsp;Go!&nbsp;

          .form-group
            label.form-label Additionally you might use file category too:
            label.form-radio
              input(type='radio', name='file-type', checked='')
              i.form-icon
              | All
            label.form-radio
              input(type='radio', name='file-type')
              i.form-icon
              | Images
            label.form-radio
              input(type='radio', name='file-type')
              i.form-icon
              | Videos
            label.form-radio
              input(type='radio', name='file-type')
              i.form-icon
              | Audios
            label.form-radio
              input(type='radio', name='file-type')
              i.form-icon
              | Archives (ZIP, etc)


        //- list of files app
        #app-files.app.column.col-9(v-bind:class="{ inactive: !isActive }")
          h5
            b {{ currentStoreName }}
            | &nbsp;&nbsp;
            a(href='#', @click.prevent="storeComments()", title="Others Talk About Store")
              icon(name='commenting', scale='2', label="Others Talk About Store")
            | &nbsp;&nbsp;
            a(href='#', @click.prevent="storeRating()", title='Store Rating')
              icon(name='star', scale='2', label='Store Rating')

          table.table.table-striped.table-hover
            thead
              tr
                th File Type
                th File Name
                th Created
                th Size
                th Price
                th Actions
            tbody
              tr(v-for='(item, index) in files', :id="item.id")
                td
                  a(href='#', :title='item.mime')
                    icon(:name='item.type', scale='2', :label='item.mime')
                td
                  | {{ item.name }}
                td
                  | {{ getTs(item.ts) }}
                td
                  | {{ item.size }}
                td
                  | {{ item.price }}
                td
                  .popover.popover-left
                    button.btn.btn-link
                      icon(name='bars', scale='2', label='Actions')
                    .popover-container
                      .card
                        .card-body
                          | &nbsp;&nbsp;
                          a(href='#', @click.prevent="fileBuy(item.id)", title='To Buy It')
                            icon(name='shopping-cart', scale='2', label='Buy')
                          | &nbsp;&nbsp;
                          a(href='#', @click.prevent="fileComments(item.id)", title="Others Talk About Product")
                            icon(name='commenting', scale='2', label="Others Talk About Product")
                          | &nbsp;&nbsp;
                          a(href='#', @click.prevent="fileRating(item.id)", title='Product Rating')
                            icon(name='star', scale='2', label='Product Rating')
                          | &nbsp;&nbsp;
                          a(href='#', @click.prevent="filePreview(item.id)", title='Product Preview')
                            icon(name='eye', scale='2', label='Product Preview')
                          | &nbsp;&nbsp;


    //- toast notifications
    #toast.toast(v-bind:class="{ inactive: !isActive, 'toast-success': isSuccess, 'toast-error': !isSuccess }")
      button.btn.btn-clear.float-right
      span
        | {{ msg }}


    //- loading bar
    .bar.bar-sm(style='position: fixed; bottom: 0%;')
      #progressbar.bar-item(role='progressbar', :style="valProgressBar", aria-valuemin='0', aria-valuemax='100')


    //- fake tag for libp2p communication
    #bridge


    script.
      document.addEventListener("DOMContentLoaded", function(event) { require('index') })
